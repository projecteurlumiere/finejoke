<%# expects either user model or nil %>
<%# if nil - returns empty slot button %>
<%# other locals: %>
<%# game %>
<%# vote_change hash: in case voting took place and we want to show the score change %>
<%# voted set: contains ids of voted users, which we preload to avoid n+1 %>

<% if user %>
  <% voted = current_round_votes&.include?(user.id) %>
  <%= tag.li id: dom_id(user),
             class: game_user_class(user, game&.current_round, voted),
             data: { 
               action: "click->game-data#showSettings",
               game_data_target: "user",
               id: user.id,
               host: user.host?,
               vote_change: votes_change.any? ? (votes_change[user.id] || 0) : nil, 
               lead: user.lead?,
               finished_turn: user.finished_turn?,
               voted: 
             } do %>
    <div class="score press-font" >
      <span class="current"><%= user.current_score %></span>
      <% if votes_change.any? %>
        <span class="change accent-alert">+<%= votes_change[user.id] || 0 %></span>
      <% end %>
    </div>
    <div class="username">
      <%= user.username.truncate(14) %>
    </div>
    <div class="settings">
      <%= link_to t(:".to_profile"), profile_path(user), data: { turbo_stream: true } %>
      <%= button_to(t(:".kick"), game_kick_path(game, params: { user_id: user.id }), class: :hidden, form_class: :hidden ) %>
    </div>
  <% end %>
<% else %> 
  <%= tag.li class: "slot button" do %>
    <div class="score press-font">
      <%= user_counter + 1 %>
    </div>
    <div>
      <%= t :".empty" %>
    </div>
  <% end %>
<% end %>